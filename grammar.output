Terminals unused in grammar

   LB
   RB
   EQ
   COMMA
   FUNCTION
   IF
   ELIF
   ELSE
   WHILE
   FOR
   RETURN
   FALSE
   TRUE


Grammar

    0 $accept: STATEMENTS $end

    1 STATEMENTS: %empty
    2           | STATEMENTS ASSIGN_STATEMENT
    3           | STATEMENTS FUN_CALL

    4 ASSIGN_STATEMENT: IDENTIFIER EQUAL EXPRESSION

    5 EXPRESSION: BINARY_EXPRESSION

    6 BINARY_EXPRESSION: NUMBER
    7                  | BINARY_EXPRESSION SUB BINARY_EXPRESSION
    8                  | BINARY_EXPRESSION ADD BINARY_EXPRESSION

    9 FUN_CALL: IDENTIFIER LP FUNC_ARG RP

   10 FUNC_ARG: %empty
   11         | ARGS

   12 ARGS: ARG
   13     | ARGS SEMICOLON ARG

   14 ARG: NUMBER
   15    | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
LP (258) 9
RP (259) 9
LB (260)
RB (261)
SEMICOLON (262) 13
EQ (263)
COMMA (264)
FUNCTION (265)
IF (266)
ELIF (267)
ELSE (268)
WHILE (269)
FOR (270)
RETURN (271)
EQUAL (272) 4
FALSE (273)
TRUE (274)
NUMBER (275) 6 14
STRING (276) 15
IDENTIFIER (277) 4 9
ADD (278) 8
SUB (279) 7


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
STATEMENTS (26)
    on left: 1 2 3, on right: 0 2 3
ASSIGN_STATEMENT (27)
    on left: 4, on right: 2
EXPRESSION (28)
    on left: 5, on right: 4
BINARY_EXPRESSION (29)
    on left: 6 7 8, on right: 5 7 8
FUN_CALL (30)
    on left: 9, on right: 3
FUNC_ARG (31)
    on left: 10 11, on right: 9
ARGS (32)
    on left: 12 13, on right: 11 13
ARG (33)
    on left: 14 15, on right: 12 13


State 0

    0 $accept: . STATEMENTS $end

    $default  reduce using rule 1 (STATEMENTS)

    STATEMENTS  go to state 1


State 1

    0 $accept: STATEMENTS . $end
    2 STATEMENTS: STATEMENTS . ASSIGN_STATEMENT
    3           | STATEMENTS . FUN_CALL

    $end        shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    ASSIGN_STATEMENT  go to state 4
    FUN_CALL          go to state 5


State 2

    0 $accept: STATEMENTS $end .

    $default  accept


State 3

    4 ASSIGN_STATEMENT: IDENTIFIER . EQUAL EXPRESSION
    9 FUN_CALL: IDENTIFIER . LP FUNC_ARG RP

    LP     shift, and go to state 6
    EQUAL  shift, and go to state 7


State 4

    2 STATEMENTS: STATEMENTS ASSIGN_STATEMENT .

    $default  reduce using rule 2 (STATEMENTS)


State 5

    3 STATEMENTS: STATEMENTS FUN_CALL .

    $default  reduce using rule 3 (STATEMENTS)


State 6

    9 FUN_CALL: IDENTIFIER LP . FUNC_ARG RP

    NUMBER  shift, and go to state 8
    STRING  shift, and go to state 9

    $default  reduce using rule 10 (FUNC_ARG)

    FUNC_ARG  go to state 10
    ARGS      go to state 11
    ARG       go to state 12


State 7

    4 ASSIGN_STATEMENT: IDENTIFIER EQUAL . EXPRESSION

    NUMBER  shift, and go to state 13

    EXPRESSION         go to state 14
    BINARY_EXPRESSION  go to state 15


State 8

   14 ARG: NUMBER .

    $default  reduce using rule 14 (ARG)


State 9

   15 ARG: STRING .

    $default  reduce using rule 15 (ARG)


State 10

    9 FUN_CALL: IDENTIFIER LP FUNC_ARG . RP

    RP  shift, and go to state 16


State 11

   11 FUNC_ARG: ARGS .
   13 ARGS: ARGS . SEMICOLON ARG

    SEMICOLON  shift, and go to state 17

    $default  reduce using rule 11 (FUNC_ARG)


State 12

   12 ARGS: ARG .

    $default  reduce using rule 12 (ARGS)


State 13

    6 BINARY_EXPRESSION: NUMBER .

    $default  reduce using rule 6 (BINARY_EXPRESSION)


State 14

    4 ASSIGN_STATEMENT: IDENTIFIER EQUAL EXPRESSION .

    $default  reduce using rule 4 (ASSIGN_STATEMENT)


State 15

    5 EXPRESSION: BINARY_EXPRESSION .
    7 BINARY_EXPRESSION: BINARY_EXPRESSION . SUB BINARY_EXPRESSION
    8                  | BINARY_EXPRESSION . ADD BINARY_EXPRESSION

    ADD  shift, and go to state 18
    SUB  shift, and go to state 19

    $default  reduce using rule 5 (EXPRESSION)


State 16

    9 FUN_CALL: IDENTIFIER LP FUNC_ARG RP .

    $default  reduce using rule 9 (FUN_CALL)


State 17

   13 ARGS: ARGS SEMICOLON . ARG

    NUMBER  shift, and go to state 8
    STRING  shift, and go to state 9

    ARG  go to state 20


State 18

    8 BINARY_EXPRESSION: BINARY_EXPRESSION ADD . BINARY_EXPRESSION

    NUMBER  shift, and go to state 13

    BINARY_EXPRESSION  go to state 21


State 19

    7 BINARY_EXPRESSION: BINARY_EXPRESSION SUB . BINARY_EXPRESSION

    NUMBER  shift, and go to state 13

    BINARY_EXPRESSION  go to state 22


State 20

   13 ARGS: ARGS SEMICOLON ARG .

    $default  reduce using rule 13 (ARGS)


State 21

    7 BINARY_EXPRESSION: BINARY_EXPRESSION . SUB BINARY_EXPRESSION
    8                  | BINARY_EXPRESSION . ADD BINARY_EXPRESSION
    8                  | BINARY_EXPRESSION ADD BINARY_EXPRESSION .

    $default  reduce using rule 8 (BINARY_EXPRESSION)


State 22

    7 BINARY_EXPRESSION: BINARY_EXPRESSION . SUB BINARY_EXPRESSION
    7                  | BINARY_EXPRESSION SUB BINARY_EXPRESSION .
    8                  | BINARY_EXPRESSION . ADD BINARY_EXPRESSION

    $default  reduce using rule 7 (BINARY_EXPRESSION)
